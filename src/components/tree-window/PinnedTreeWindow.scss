@import '../../define';

.pinned-tree-window {
  position: absolute;
  width: 200px;
  z-index: 2;

  background-color: $gray-light-background;
  border-radius: $border-radius;
  box-shadow: $shadow-border-light;

  display: flex;
  flex-direction: column;
  align-items: center;

  &.hidden {
    visibility: hidden;
  }
}

.tree-header {
  width: 100%;
  padding: 2px 0px;
  height: 26px;

  font-size: 0.9rem;
  text-align: center;
  border-top-left-radius: $border-radius;
  border-top-right-radius: $border-radius;

  color: $gray-200;
  background-color: $gray-700;

  cursor: move;
  user-select: none;
  -webkit-user-select: none;

  display: flex;
  position: relative;
  flex-direction: row;
  justify-content: center;
  gap: 3px;

  .tree-info {
    flex-grow: 1;
    padding-left: 7px;

    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;

    .tree-name {
      font-weight: 600;
    }
  }

  .control-buttons {
    flex-grow: 0;
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 100%;

    padding-right: 7px;
    gap: 4px;

    .svg-icon {
      display: flex;
      justify-content: center;
      align-items: center;

      cursor: pointer;

      fill: $gray-300;
      transition: background-color 100ms ease-in-out, fill 100ms ease-in-out,
        color 100ms ease-in-out;

      :global(svg) {
        width: 15px;
        height: 15px;
      }

      &:hover {
        fill: adjust-color($color: $gray-300, $lightness: +7%);
      }

      &:active {
        fill: adjust-color($color: $gray-300, $lightness: +12%);
      }
    }
  }
}

.icon-heart {
  animation: heart-animation 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
}

@keyframes heart-animation {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
}

.content {
  display: flex;
  position: relative;
}

.tree-svg {
  stroke-linecap: round;
  stroke-linejoin: round;

  :global(path.link) {
    fill: none;
    stroke: $gray-700;
    stroke-width: 1px;
  }

  :global(path.link.highlighted) {
    stroke-width: 2px;
    stroke: $gray-600;
    stroke-dasharray: 2px 5px;
    animation: dash 60s infinite linear;
  }

  :global(.node rect) {
    fill: $gray-light-background;
    stroke: $gray-700;
    stroke-width: 1px;
  }

  :global(.node text) {
    fill: $gray-700;
    dominant-baseline: middle;
    text-anchor: middle;
  }

  :global(text.split-label) {
    text-anchor: start;
    dominant-baseline: auto;
    fill: $gray-700;
    font-weight: 300;
    font-size: 0.8rem;
  }

  :global(text.split-label.split-label-left) {
    text-anchor: end;
  }
}

@keyframes dash {
  to {
    stroke-dashoffset: -1000;
  }
}
