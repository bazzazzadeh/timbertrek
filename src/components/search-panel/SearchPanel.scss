@import '../../define';

$panel-h-padding: 16px;
$range-thumb-width: 8px;
$base-circle-radius: 5px;

$color-chart-primary: $green-600;
$color-chart-secondary: $green-100;

.search-panel {
  display: none;
  flex-direction: column;
  align-items: center;

  width: 268px;
  min-height: 300px;
  max-height: 615px;

  border-radius: $border-radius;
  background-color: $gray-light-background;

  user-select: none;
  -webkit-user-select: none;

  &.shown {
    display: flex;
  }
}

.header {
  height: $sidebar-header-height;
  width: 100%;
  flex-shrink: 0;

  background-color: $gray-800;
  border-top-left-radius: $border-radius;
  border-top-right-radius: $border-radius;
  color: $gray-light-background;

  padding: 0px $panel-h-padding;
  display: flex;
  align-items: center;
  justify-content: flex-start;

  .header-title {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;

    cursor: default;
    user-select: none;
    -webkit-user-select: none;

    .icons {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: 4px;

      .svg-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        color: $gray-400;
        fill: $gray-400;
        cursor: pointer;
        pointer-events: fill;

        :global(svg) {
          width: 1rem;
          height: 1rem;
        }

        &.close-icon {
          :global(svg) {
            width: $font-u1;
            height: $font-u1;
          }
        }

        &:hover {
          color: $gray-50;
          fill: $gray-50;
        }

        &:active {
          color: white;
          fill: white;
        }
      }
    }
  }
}

.search-list {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  flex-grow: 1;

  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  padding: 5px $panel-h-padding;

  font-size: $font-d1;

  .row {
    position: relative;

    .row-title {
      font-weight: 500;
    }
  }
}

.accuracy-row {
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  .accuracy-content {
    width: 100%;
    position: relative;
  }
}

.feature-hist {
  position: relative;
  width: 100%;
}

.feature-slider {
  position: absolute;
  top: 60px;
  width: 100%;
  display: flex;
  flex-direction: column;
  z-index: 1;

  .track {
    width: calc(100% - #{2 * $range-thumb-width});
    background-color: $gray-200;
    // Only use top and bottom border here to avoid offsetting the left and right
    // with artifacts => cause misalignment with svg dimension
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    position: absolute;
    left: $range-thumb-width;
    height: 8px;

    .range-track {
      position: absolute;
      height: 6px;
      background-color: $color-chart-secondary;
    }
  }

  .svg-icon.thumb {
    position: absolute;
    padding: 0;
    margin: 0px;
    bottom: -11px;

    color: $color-chart-primary;
    fill: $color-chart-primary;
    cursor: grab;

    :global(svg) {
      width: 8px;
    }

    &::before {
      content: '';
      display: inline-block;
      position: absolute;
      z-index: 1;
      width: $base-circle-radius;
      height: $base-circle-radius;
      border-radius: 50%;
      background: currentColor;
      opacity: 0.2;
      // Center the background circle
      left: 50%;
      top: 50%;
      margin-top: -($base-circle-radius / 2);
      margin-left: -($base-circle-radius / 2);
      -webkit-backface-visibility: hidden;
      -webkit-transform: translateZ(0);
      transform: scale(0.1);
      transition: transform 300ms ease-in-out;
    }
  }

  .svg-icon.thumb:hover {
    &::before {
      transform: scale(5);
    }

    .thumb-label {
      transition-delay: 200ms;
      transform: translateX(-50%) translateY(100%) scale(1);
    }
  }

  .svg-icon.thumb:focus {
    cursor: grabbing;
    outline: none;

    &::before {
      transform: scale(7);
    }

    .thumb-label {
      transform: translateX(-50%) translateY(100%) scale(1);
    }
  }
}

.thumb-label {
  position: absolute;
  top: 5px;
  left: 50%;

  font-size: 0.8rem;
  font-variant: font-variant-numeric;
  border-radius: 2px;
  line-height: 1.2;
  white-space: nowrap;
  background-color: $gray-500;
  color: white;

  -webkit-backface-visibility: hidden;
  -webkit-transform: translateZ(0);
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transform-origin: top center;
  transform: translateX(-50%) translateY(100%) scale(0);

  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem;

  &::before {
    position: absolute;
    content: '';
    width: 8px;
    height: 8px;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, -220%) rotate(45deg);
    background-color: inherit;
  }
}

.svg-accuracy {
  :global(.area-path) {
    fill: $gray-300;
  }

  :global(.area-path.selected) {
    fill: $color-chart-primary;
  }

  :global(.tick line) {
    stroke: $color-chart-secondary;
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);
    transform: scaleY(1.8);
    transition: transform 300ms ease-in-out;
  }

  :global(.tick.out-range line) {
    stroke: $gray-200;
    transform: scaleY(1);
  }
}

.height-content {
  display: flex;
  flex-direction: column;
  gap: 5px;

  .feature-hist {
    display: flex;
  }

  .height-checkboxes {
    width: 100%;
    position: relative;

    :global(.height-checkbox) {
      position: absolute;
      accent-color: $color-chart-primary;
    }

    :global(.height-checkbox-label) {
      position: absolute;
      font-size: 0.9em;
      color: $gray-500;
      line-height: 1;
    }
  }
}

.svg-height {
  :global(.bar rect) {
    fill: $gray-300;
  }

  :global(.bar.selected rect) {
    fill: $color-chart-primary;
  }

  :global(.bar text) {
    font-size: 11px;
    text-anchor: middle;
    fill: $gray-600;
    user-select: none;
    -webkit-user-select: none;
    font-variant: font-variant-numeric;
  }

  :global(.bar.selected text) {
    fill: $green-400;
  }

  :global(.bar.selected .text-height) {
    font-weight: 800;
  }
}
